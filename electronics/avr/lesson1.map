Archive member included because of file (symbol)

/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o (exit)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fixunssfsi.o)
                              lesson1.o (__fixunssfsi)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mul_sf.o)
                              lesson1.o (__mulsf3)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_gt_sf.o)
                              lesson1.o (__gtsf2)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_ge_sf.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_lt_sf.o)
                              lesson1.o (__ltsf2)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_sf_to_si.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_thenan_sf.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_thenan_sf.o) (__do_copy_data)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_pack_sf.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_unpack_sf.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
LOAD lesson1.o
LOAD /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/libc.a
LOAD /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xdb0
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008a        0x8 /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000092        0x4 /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
                0x0000000000000092                __vector_20
                0x0000000000000092                __vector_1
                0x0000000000000092                __vector_24
                0x0000000000000092                __vector_12
                0x0000000000000092                __bad_interrupt
                0x0000000000000092                __vector_6
                0x0000000000000092                __vector_3
                0x0000000000000092                __vector_23
                0x0000000000000092                __vector_25
                0x0000000000000092                __vector_11
                0x0000000000000092                __vector_13
                0x0000000000000092                __vector_17
                0x0000000000000092                __vector_19
                0x0000000000000092                __vector_7
                0x0000000000000092                __vector_5
                0x0000000000000092                __vector_4
                0x0000000000000092                __vector_9
                0x0000000000000092                __vector_2
                0x0000000000000092                __vector_21
                0x0000000000000092                __vector_15
                0x0000000000000092                __vector_8
                0x0000000000000092                __vector_14
                0x0000000000000092                __vector_10
                0x0000000000000092                __vector_16
                0x0000000000000092                __vector_18
                0x0000000000000092                __vector_22
 .text          0x0000000000000096      0x1f4 lesson1.o
                0x0000000000000096                main
 .text          0x000000000000028a        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x000000000000028a       0x58 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fixunssfsi.o)
                0x000000000000028a                __fixunssfsi
 .text          0x00000000000002e2      0x354 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o)
                0x000000000000057a                __subsf3
                0x00000000000005dc                __addsf3
 .text          0x0000000000000636      0x1f4 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mul_sf.o)
                0x0000000000000636                __mulsf3
 .text          0x000000000000082a       0x60 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_gt_sf.o)
                0x000000000000082a                __gtsf2
 .text          0x000000000000088a       0x60 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_ge_sf.o)
                0x000000000000088a                __gesf2
 .text          0x00000000000008ea       0x60 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_lt_sf.o)
                0x00000000000008ea                __ltsf2
 .text          0x000000000000094a       0xa8 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_sf_to_si.o)
                0x000000000000094a                __fixsfsi
 .text          0x00000000000009f2        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_thenan_sf.o)
 .text          0x00000000000009f2        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .text          0x00000000000009f2        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
 .text          0x00000000000009f2        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000009f2      0x1aa /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_pack_sf.o)
                0x00000000000009f2                __pack_f
 .text          0x0000000000000b9c       0xf0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_unpack_sf.o)
                0x0000000000000b9c                __unpack_f
 .text          0x0000000000000c8c       0xb2 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fpcmp_parts_sf.o)
                0x0000000000000c8c                __fpcmp_parts_f
                0x0000000000000d3e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000d3e        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000d3e       0x38 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
                0x0000000000000d3e                __prologue_saves__
 .text.libgcc   0x0000000000000d76       0x36 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
                0x0000000000000d76                __epilogue_restores__
 .text.libgcc   0x0000000000000dac        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x0000000000000dac                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000dac        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x0000000000000dac                exit
                0x0000000000000dac                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000dac        0x4 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000db0                _etext = .

.data           0x0000000000800100        0x8 load address 0x0000000000000db0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 lesson1.o
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fixunssfsi.o)
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o)
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mul_sf.o)
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_gt_sf.o)
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_ge_sf.o)
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_lt_sf.o)
 .data          0x0000000000800100        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_sf_to_si.o)
 .data          0x0000000000800100        0x8 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_thenan_sf.o)
                0x0000000000800100                __thenan_sf
 .data          0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
 .data          0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_pack_sf.o)
 .data          0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_unpack_sf.o)
 .data          0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fpcmp_parts_sf.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800108                . = ALIGN (0x2)
                0x0000000000800108                _edata = .
                0x0000000000800108                PROVIDE (__data_end, .)

.bss            0x0000000000800108        0x0
                0x0000000000800108                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800108        0x0 lesson1.o
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fixunssfsi.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mul_sf.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_gt_sf.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_ge_sf.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_lt_sf.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_sf_to_si.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_thenan_sf.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_pack_sf.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_unpack_sf.o)
 .bss           0x0000000000800108        0x0 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fpcmp_parts_sf.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800108                PROVIDE (__bss_end, .)
                0x0000000000000db0                __data_load_start = LOADADDR (.data)
                0x0000000000000db8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800108        0x0
                0x0000000000800108                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800108                PROVIDE (__noinit_end, .)
                0x0000000000800108                _end = .
                0x0000000000800108                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x2c28
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o
 .stab          0x00000000000006cc      0x48c lesson1.o
                                        0x498 (size before relaxing)
 .stab          0x0000000000000b58      0x300 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fixunssfsi.o)
                                        0x30c (size before relaxing)
 .stab          0x0000000000000e58      0x6fc /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_addsub_sf.o)
                                        0x774 (size before relaxing)
 .stab          0x0000000000001554      0x51c /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_mul_sf.o)
                                        0x660 (size before relaxing)
 .stab          0x0000000000001a70      0x210 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_gt_sf.o)
                                        0x354 (size before relaxing)
 .stab          0x0000000000001c80      0x210 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_ge_sf.o)
                                        0x354 (size before relaxing)
 .stab          0x0000000000001e90      0x210 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_lt_sf.o)
                                        0x354 (size before relaxing)
 .stab          0x00000000000020a0      0x240 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_sf_to_si.o)
                                        0x384 (size before relaxing)
 .stab          0x00000000000022e0      0x12c /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_thenan_sf.o)
                                        0x270 (size before relaxing)
 .stab          0x000000000000240c      0x324 /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_pack_sf.o)
                                        0x468 (size before relaxing)
 .stab          0x0000000000002730      0x2ac /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_unpack_sf.o)
                                        0x3f0 (size before relaxing)
 .stab          0x00000000000029dc      0x24c /usr/local/lib/gcc/avr/4.3.4/avr5/libgcc.a(_fpcmp_parts_sf.o)
                                        0x390 (size before relaxing)

.stabstr        0x0000000000000000     0x44aa
 *(.stabstr)
 .stabstr       0x0000000000000000     0x44aa /usr/local/lib/gcc/avr/4.3.4/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(lesson1.elf elf32-avr)
LOAD linker stubs
